---
- name: Create certificates directory if it does not exist
  hosts: localhost
  tasks:
    - name: Create certificates directory if it does not exist
      ansible.builtin.file:
        path: /workspaces/ceos-certs/certificates
        state: directory

# https://pki.goog/repo/certs/gsr4.pem

- name: generate certs
  hosts: all
  vars:
    - ca_cert_download_url: "https://pki.goog/repo/certs/gsr4.pem"  # google ca for testing 
    - key_size: 4096
    - passphrase: # Set if you want passphrase
    - key_type: RSA # Others include DSA, ECC, Ed25519, Ed448, X25519, X448
    - country_name: DE
    - email_address: ava@lab.net
    - organization_name: Arista Networks, Inc.

  tasks:

    - name: Download foo.conf
      ansible.builtin.get_url:
        url: "{{ ca_cert_download_url }}"
        dest: "/workspaces/ceos-certs/certificates/ca_cert.pem"
      delegate_to: localhost

    - name: Generate an OpenSSL private key
      community.crypto.openssl_privatekey:
        path: "/workspaces/ceos-certs/certificates/{{ inventory_hostname }}.key"
        size: "{{ key_size }}"
        type: "{{ key_type }}"
        backup: yes
      delegate_to: localhost

    - name: Generate an OpenSSL Certificate Signing Request with Subject information
      community.crypto.openssl_csr:
        path: "/workspaces/ceos-certs/certificates/{{ inventory_hostname }}.csr"
        privatekey_path: "/workspaces/ceos-certs/certificates/{{ inventory_hostname }}.key"
        country_name: "{{ country_name }}"
        organization_name: "{{ organization_name }}"
        email_address: "{{ email_address }}"
        common_name: "{{ inventory_hostname }}"
      delegate_to: localhost
        
    - name: Create simple self-signed certificate
      community.crypto.x509_certificate:
        path: /workspaces/ceos-certs/certificates/{{ inventory_hostname }}.pem
        privatekey_path: "/workspaces/ceos-certs/certificates/{{ inventory_hostname }}.key"
        csr_path: "/workspaces/ceos-certs/certificates/{{ inventory_hostname }}.csr"
        provider: selfsigned
      delegate_to: localhost

- name: Copy cert and key files
  hosts: all
  vars:
    ansible_connection: network_cli
    ansible_network_os: arista.eos.eos
    ansible_user: admin
    ansible_password: admin
  tasks:
    - name: copy certificate and key
      net_put:
        src: "{{ item }}"
        dest: /mnt/flash/{{ inventory_hostname }}.pem
        protocol: sftp
      with_items:
        - /workspaces/ceos-certs/certificates/{{ inventory_hostname }}.pem
        - /workspaces/ceos-certs/certificates/{{ inventory_hostname }}.key

- name: 
  hosts: all
  vars:
    ansible_connection: httpapi
    ansible_network_os: eos
    ansible_user: admin
    ansible_password: admin
    ansible_become: yes
    ansible_become_method: enable
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
  tasks:
  - name: run show commands
    arista.eos.eos_command:
      commands:
      - show ip bgp summary
